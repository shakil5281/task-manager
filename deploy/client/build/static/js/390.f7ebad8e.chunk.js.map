{"version":3,"file":"static/js/390.f7ebad8e.chunk.js","mappings":"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","sources":["components/CancelTask/index.jsx","components/tools/TaskTool.jsx","hooks/ReadTask.js"],"sourcesContent":["import { Box, Paper, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport TaskTool from '../tools/TaskTool'\r\nimport ReadTask from '../../hooks/ReadTask'\r\n\r\nconst CancelTask = () => {\r\n    const task = ReadTask()\r\n    return (\r\n        <>\r\n            <Typography variant='h4' sx={{ color: 'gray' }}>\r\n                Canceled Task\r\n            </Typography>\r\n            <Box component={'div'} sx={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                {\r\n                    Array.from(task).map((task, i) => (\r\n                        <Paper key={task._id} elevation={0} sx={{ width: '25%', margin: 3, boxShadow: '2px 12px 15px 0px #46464612' }}>\r\n                            <TaskTool task={task} />\r\n                        </Paper>\r\n                    ))\r\n                }\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CancelTask","import React from 'react'\r\nimport axios from 'axios'\r\nimport { Box, Button, Dialog, DialogActions,  DialogTitle, FormControl, IconButton, InputLabel, MenuItem, Select, Slide, Stack, Typography } from '@mui/material'\r\nimport CreditScoreTwoToneIcon from '@mui/icons-material/CreditScoreTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport { getToken } from '../../helper/sessionStorege';\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst AxiosHeader = { headers: { \"token\": getToken() } }\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst TaskTool = ({ task }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [uopen, setuopen] = React.useState(false)\r\n  const [inputs, setInputs] = React.useState({});\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClickOpenUpdate = () => {\r\n    setuopen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseUpdate = () => {\r\n    setuopen(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setInputs(values => ({ ...values, [name]: value }))\r\n  };\r\n\r\n\r\n\r\n  const UpdateStatus = async (id) => {\r\n    try {\r\n      \r\n      await axios.post(`/update/${id}`, inputs, AxiosHeader)\r\n      console.log('status update')\r\n      setuopen(false);\r\n      navigate(0)\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const StatusUpdate = (id) => {\r\n    UpdateStatus(id)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box component={'div'} sx={{ padding: 3 }}>\r\n        <Typography variant='h6'>{task.task}</Typography>\r\n        <Typography variant='body2'\r\n          sx={{ height: 80, overflow: 'hidden', marginTop: 1 }}\r\n        >\r\n          {task.desc}\r\n        </Typography>\r\n\r\n        <Stack sx={{ marginTop: 3 }} direction=\"row\" spacing={2}>\r\n          <IconButton onClick={handleClickOpenUpdate} color='primary'><CreditScoreTwoToneIcon /></IconButton>\r\n          <IconButton onClick={handleClickOpen} color='error'><DeleteTwoToneIcon /></IconButton>\r\n        </Stack>\r\n        <Typography variant='body2'\r\n          sx={{ marginTop: -4, display: 'flex', float: 'right', letterSpacing: 1 }}\r\n        >\r\n          {task.createdAt}\r\n        </Typography>\r\n      </Box>\r\n\r\n\r\n      {/* For Delete */}\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle\r\n        >{\"Are you sure? Delete Your Task\"}</DialogTitle>\r\n        <DialogActions\r\n        >\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button LinkComponent={Link} to={`/taskdelete/${task._id}`} onClick={handleClose}>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n\r\n      {/* For Update */}\r\n      <Dialog\r\n        sx={{ padding: '30px' }}\r\n        open={uopen}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleCloseUpdate}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <Box component={'div'} sx={{ padding: 1, width: '400px' }}>\r\n          <DialogTitle\r\n          >{\"Change Your Task Status\"}</DialogTitle>\r\n          <DialogActions\r\n          >\r\n            <Box sx={{ width: '100%' }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  name=\"status\"\r\n                  value={task.status || \"\"}\r\n                  label=\"Status\"\r\n                  onChange={handleChange}\r\n                >\r\n                  {\r\n                    ['task', 'complite', 'progress', 'canceled'].map((status, i) => (\r\n                      <MenuItem key={i.toString()} value={status}>{status}</MenuItem>\r\n                    ))\r\n                  }\r\n                </Select>\r\n                <Box component={'div'} sx={{ marginTop: 4 }}>\r\n                  <Button sx={{ float: 'right', display: 'flex' }} onClick={() => StatusUpdate(task._id)}>Update</Button>\r\n                  <Button sx={{ float: 'right', display: 'flex' }} onClick={handleCloseUpdate}>Cancel</Button>\r\n                </Box>\r\n              </FormControl>\r\n            </Box>\r\n          </DialogActions>\r\n        </Box>\r\n      </Dialog>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskTool","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getToken } from '../helper/sessionStorege'\r\n\r\nconst AxiosHeader = { headers: { \"token\": getToken() } }\r\n\r\n\r\nconst ReadTask = () => {\r\n    const params = useParams()\r\n    const url = params.status\r\n\r\n    const [task, settask] = React.useState({})\r\n\r\n    const DataTask= async(status) =>{\r\n        try{\r\n            const {data} = await axios.get('/read/' + status, AxiosHeader)\r\n            settask(data.data)\r\n            if(status === 200){\r\n                DataTask(url)\r\n            }\r\n        }catch(err){\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(()=>{\r\n        DataTask(url)\r\n    }, [])\r\n\r\n    return task\r\n}\r\n\r\nexport default ReadTask"],"names":["task","ReadTask","variant","sx","color","component","display","flexWrap","Array","from","map","i","elevation","width","margin","boxShadow","_id","AxiosHeader","headers","getToken","Transition","React","props","ref","direction","open","setOpen","uopen","setuopen","inputs","setInputs","navigate","useNavigate","handleClose","handleCloseUpdate","UpdateStatus","id","axios","console","log","error","padding","height","overflow","marginTop","desc","spacing","onClick","float","letterSpacing","createdAt","TransitionComponent","keepMounted","onClose","LinkComponent","Link","to","fullWidth","labelId","name","value","status","label","onChange","event","target","values","toString","url","useParams","settask","DataTask","data"],"sourceRoot":""}