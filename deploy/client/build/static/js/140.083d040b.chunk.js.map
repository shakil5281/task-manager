{"version":3,"file":"static/js/140.083d040b.chunk.js","mappings":"8TA6EA,UAjEyB,WAEvB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAoBC,EAAAA,EAAAA,MAApBD,gBACR,EAA4BE,EAAAA,SAAe,CAAC,GAAE,eAAvCC,EAAM,KAAEC,EAAS,KACxB,EAA8BF,EAAAA,UAAe,GAAM,eAA5CG,EAAO,KAAEC,EAAU,KAQpBC,EAAY,yCAAG,mFAED,OAFC,SAEjBD,GAAW,GAAK,SACVE,EAAAA,EAAAA,KAAW,aAAD,OAAcL,EAAOM,QAAQ,OAC7CH,GAAW,GACXN,EAAgB,WAAY,CAAEU,QAAS,aACvCC,EAAAA,EAAAA,IAASR,EAAOM,OAChBX,EAAS,0BAAyB,kDAElCQ,GAAW,GACXN,EAAgB,KAAIY,SAASC,KAAKA,KAAM,CAAEH,QAAS,UAAW,0DAEjE,kBAZiB,mCAkBlB,OACE,iCACE,SAAC,IAAG,CAACI,UAAW,MAAOC,GAAI,CAAEC,QAAS,YAAaC,WAAY,QAAS,UACtE,SAAC,IAAU,CAACC,cAAeC,EAAAA,GAAMC,GAAG,IAAIC,KAAK,QAAQC,MAAM,UAAS,UAClE,SAAC,IAAkB,SAGvB,UAAC,IAAK,CAACR,UAAW,OAAQS,SAXT,SAACC,GACpBA,EAAMC,iBACNlB,GACF,EAQsDQ,GAAI,CAAEW,MAAO,QAASC,OAAQ,SAAUC,WAAY,GAAKC,UAAW,EAAE,WACtH,SAAC,IAAU,CAACnB,QAAQ,KAAKK,GAAI,CAAEe,UAAW,UAAW,UACnD,SAAC,MAAM,OAET,SAAC,IAAU,CAACf,GAAI,CAAEe,UAAW,SAAUH,OAAQ,SAAUI,WAAY,OAAQC,SAAU,UAAW,SAAC,2BAGnG,SAAC,IAAU,CAACtB,QAAQ,QAAQK,GAAI,CAAEC,QAAS,YAAac,UAAW,UAAW,SAAC,sHAG/E,SAAC,IAAS,CACRG,KAAK,QACLC,MAAO/B,EAAOM,OAAS,GACvB0B,SA5Ca,SAACX,GACpB,IAAMS,EAAOT,EAAMY,OAAOH,KACpBC,EAAQV,EAAMY,OAAOF,MAC3B9B,GAAU,SAAAiC,GAAM,yBAAUA,GAAM,cAAGJ,EAAOC,GAAK,GACjD,EAyCQxB,QAAQ,WAAWY,MAAM,UAAUP,GAAI,CAAEuB,UAAW,EAAGC,QAAS,SAAWC,MAAM,gBAAgBC,WAAS,KAC5G,SAAC,IAAa,CACZpC,QAASA,EACTqC,gBAAgB,SAChBC,KAAK,SAASjC,QAAQ,YAAYK,GAAI,CAAEuB,UAAW,EAAGC,QAAS,QAASb,MAAO,OAAQV,QAAS,GAAK4B,kBAAgB,WAAC,kBACxH,SAAC,KAAI,CAACxB,GAAG,eAAc,UAAC,iBAAMyB,MAAO,CAAElB,OAAQ,SAAUY,QAAS,QAASb,MAAO,OAAQI,UAAW,SAAUd,QAAS,EAAGe,WAAY,MAAOC,SAAU,QAASV,MAAO,SAAU,SAAC,2BAM3L,C","sources":["components/RecoveryPassword/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Box, Button, IconButton, Paper, TextField, Typography } from '@mui/material'\r\nimport AirplayTwoToneIcon from '@mui/icons-material/AirplayTwoTone';\r\nimport { Link } from 'react-router-dom';\r\nimport { FcLock } from 'react-icons/fc';\r\nimport axios, { HttpStatusCode } from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useSnackbar } from 'notistack';\r\nimport { setEmail } from '../../helper/sessionStorege';\r\n\r\n\r\nconst RecoveryPassword = () => {\r\n\r\n  const navigate = useNavigate()\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [inputs, setInputs] = React.useState({});\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setInputs(values => ({ ...values, [name]: value }))\r\n  }\r\n\r\n  const sentEmailOTP = async () => {\r\n    try {\r\n      setLoading(true)\r\n      await axios.post(`/recovery/${inputs.email}`)\r\n      setLoading(false)\r\n      enqueueSnackbar('OTP sent', { variant: 'success' });\r\n      setEmail(inputs.email)\r\n      navigate('/users/otpverification')\r\n    } catch (err) {\r\n      setLoading(false)\r\n      enqueueSnackbar(err.response.data.data, { variant: 'error' });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    sentEmailOTP()\r\n  }\r\n  return (\r\n    <>\r\n      <Box component={'div'} sx={{ padding: '30px 25px', lineHeight: '20px' }}>\r\n        <IconButton LinkComponent={Link} to='/' size='large' color='primary'>\r\n          <AirplayTwoToneIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Paper component={'form'} onSubmit={handleSubmit} sx={{ width: '400px', margin: '0 auto', paddingTop: 5 }} elevation={0}>\r\n        <Typography variant='h1' sx={{ textAlign: 'center' }}>\r\n          <FcLock />\r\n        </Typography>\r\n        <Typography sx={{ textAlign: 'center', margin: '15px 0', fontWeight: 'bold', fontSize: '1.7rem' }}>\r\n          Forgot your password?\r\n        </Typography>\r\n        <Typography variant='body2' sx={{ padding: '10px 30px', textAlign: 'center' }}>\r\n          Please enter the email address associated with your account and We will email you a link to reset your password.\r\n        </Typography>\r\n        <TextField\r\n          name=\"email\"\r\n          value={inputs.email || \"\"}\r\n          onChange={handleChange}\r\n          variant='outlined' color='success' sx={{ marginTop: 4, display: 'block' }} label='Email Address' fullWidth />\r\n        <LoadingButton\r\n          loading={loading}\r\n          loadingPosition=\"center\"\r\n          type='submit' variant='contained' sx={{ marginTop: 4, display: 'block', width: '100%', padding: 2 }} disableElevation>Send Request</LoadingButton>\r\n        <Link to='/users/login'><span style={{ margin: '30px 0', display: 'block', width: '100%', textAlign: 'center', padding: 5, fontWeight: '600', fontSize: '.8rem', color: 'black' }}>\r\n          Return to Login</span></Link>\r\n      </Paper>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecoveryPassword"],"names":["navigate","useNavigate","enqueueSnackbar","useSnackbar","React","inputs","setInputs","loading","setLoading","sentEmailOTP","axios","email","variant","setEmail","response","data","component","sx","padding","lineHeight","LinkComponent","Link","to","size","color","onSubmit","event","preventDefault","width","margin","paddingTop","elevation","textAlign","fontWeight","fontSize","name","value","onChange","target","values","marginTop","display","label","fullWidth","loadingPosition","type","disableElevation","style"],"sourceRoot":""}